{# filepath: /c:/Users/Dev404/Documents/foot_connect/FOOT_CONNECT/templates/home/index.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
.card-enter {
            animation: cardEnter 0.5s ease-out forwards;
        }

        @keyframes cardEnter {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .comment-section {
            transition: all 0.3s ease-in-out;
        }
    </style>
{% endblock %}

{% block body %}
<div class="bg-gradient-to-b from-gray-50 to-gray-100 min-h-screen">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <h1 class="text-3xl font-bold text-center text-gray-900 mb-10">
            <i class="fas fa-stream text-blue-600 mr-2"></i>
            Fil d'actualités
        </h1>

        {% if photos is defined and photos|length > 0 %}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {% for photo in photos %}
                    <div class="card-enter bg-white rounded-xl shadow-lg overflow-hidden transform transition-all duration-300 hover:shadow-xl" 
                         style="animation-delay: {{ loop.index * 0.1 }}s; width: 100%; min-width: 320px; max-width: 450px; margin: 0 auto;">
                        <!-- En-tête avec avatar et nom -->
                        <div class="p-4 border-b flex justify-between items-center">
                            <div class="flex items-center space-x-3">
                                <a href="{{ path('app_profil_user', {'id': photo.user.id }) }}" class="ml-2 font-medium text-sm hover:text-blue-600 transition">

                                </a>
                                <div>
                                    <a href="{{ path('app_profil_user', {'id': photo.user.id}) }}" 
                                       class="font-semibold text-gray-900 hover:text-blue-600 transition-colors">
                                        {{ photo.user.pseudo }}
                                    </a>
                                    <p class="text-xs text-gray-500">
                                        {{ photo.createdAt|date('d/m/Y H:i') }}
                                    </p>
                                </div>
                            </div>

                          
                        </div>

                        <!-- Image -->
                        <div class="relative h-96">
                            <img src="{{ asset('uploads/photos/' ~ photo.photoUrl) }}" 
                                 alt="Photo de {{ photo.user.pseudo }}" 
                                 class="w-full h-full object-cover">
                        </div>

                        <!-- Actions et description -->
                        <div class="p-4">
                            <p class="text-gray-800 mb-4 text-sm">{{ photo.description }}</p>
                            
                            <div class="flex items-center justify-between">
                                {% if app.user %}
                                    <button class="like-button group flex items-center space-x-2" 
                                            data-photo-id="{{ photo.id }}">
                                        <span class="w-10 h-10 rounded-full flex items-center justify-center transition-colors duration-300
                                            bg-gray-100 text-gray-500 group-hover:bg-pink-50 group-hover:text-pink-500">
                                            <i class="fas fa-heart"></i>
                                        </span>
                                        <span class="like-count text-sm font-medium">{{ photo.likes|length }}</span>
                                    </button>
                               {% else %}
    <a href="{{ path('app_login') }}" class="group flex items-center space-x-2">
        <span class="w-10 h-10 rounded-full flex items-center justify-center 
            bg-gray-100 text-gray-400 group-hover:bg-gray-200 transition-colors duration-300">
            <i class="fas fa-heart"></i>
        </span>
        <div class="flex flex-col">
            <span class="like-count text-sm font-medium text-gray-500">{{ photo.likes|length }}</span>
            <span class="text-sm text-blue-600">Se connecter pour liker</span>
        </div>
    </a>
{% endif %}

                                <button class="comment-toggle group flex items-center space-x-2" 
                                        data-target="comments-{{ photo.id }}">
                                    <span class="w-10 h-10 rounded-full flex items-center justify-center bg-gray-100 text-gray-500 group-hover:bg-blue-50 group-hover:text-blue-500 transition-colors duration-300">
                                        <i class="fas fa-comment"></i>
                                    </span>
                                    <span class="text-sm font-medium">{{ photo.comments|length }}</span>
                                </button>

                                {% if app.user == photo.user %}
                                    <a href="{{ path('app_delete_photo', {'id': photo.id}) }}" 
                                       class="group flex items-center space-x-2"
                                       onclick="return confirm('Voulez-vous vraiment supprimer cette publication ?')">
                                        <span class="w-10 h-10 rounded-full flex items-center justify-center bg-gray-100 text-gray-500 group-hover:bg-red-50 group-hover:text-red-500 transition-colors duration-300">
                                            <i class="fas fa-trash"></i>
                                        </span>
                                    </a>
                                {% endif %}
                            </div>
                        </div>

                        <!-- Section commentaires -->
                        <div id="comments-{{ photo.id }}" class="hidden comment-section">
                            <div class="border-t border-gray-100 bg-gray-50 p-4">
                                <div class="space-y-4 max-h-72 overflow-y-auto">
                                    {% for comment in photo.comments %}
                                        <div id="commentaire" class="flex space-x-3">
                                            <div class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-indigo-600 flex items-center justify-center text-white font-bold text-sm">
                                                {{ comment.user.pseudo|slice(0,1)|upper }}
                                            </div>
                                            <div class="flex-1 bg-white rounded-lg p-3 shadow-sm">
                                                <p  class="commentairemsg text-sm text-gray-800">{{ comment.message }}</p>
                                                <p class="text-xs text-gray-500 mt-1">{{ comment.createdAt|date('H:i') }}</p>
                                            </div>
                                        </div>
                                    {% else %}
                                        <p class="text-center text-gray-500 py-4">Aucun commentaire pour le moment</p>
                                    {% endfor %}
                                </div>

                                <!-- Formulaire de commentaire -->
                                {% if app.user %}
                                    {% if commentForms[photo.id] is defined %}
                                        {{ form_start(commentForms[photo.id], {
                                            'attr': {
                                                'class': 'mt-4 comment-form',
                                                'id': 'comment-form-' ~ photo.id,
                                                'data-photo-id': photo.id
                                            }
                                        }) }}
                                        <div class="flex space-x-2">
                                            {{ form_widget(commentForms[photo.id].message, {
                                                'attr': {
                                                    'class': 'flex-1 rounded-full px-4 py-2 border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm',
                                                    'placeholder': 'Ajouter un commentaire...'
                                                }
                                            }) }}
                                            <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors duration-300 flex items-center justify-center">
                                                <i class="fas fa-paper-plane"></i>
                                            </button>
                                        </div>
                                        {{ form_end(commentForms[photo.id]) }}
                                    {% endif %}
                                {% else %}
                                    <div class="mt-4 flex items-center justify-between bg-gray-50 p-3 rounded-lg border border-gray-200">
                                        <p class="text-sm text-gray-600">Connectez-vous pour commenter</p>
                                        <a href="{{ path('app_login') }}" class="text-sm font-medium text-blue-600 hover:text-blue-800 transition-colors">
                                            Se connecter
                                        </a>
                                    </div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <div class="text-center py-16">
                <div class="w-24 h-24 mx-auto bg-blue-100 rounded-full flex items-center justify-center text-blue-500 mb-6">
                    <i class="fas fa-images text-4xl"></i>
                </div>
                <h3 class="text-xl font-semibold text-gray-900 mb-2">Aucune publication</h3>
                <p class="text-gray-600 mb-6">Commencez à partager vos moments avec la communauté !</p>
                <a href="{{ path('app_profil') }}" 
                   class="inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors duration-300">
                    <i class="fas fa-plus-circle mr-2"></i>
                    Créer une publication
                </a>
            </div>
        {% endif %}
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Gestion des likes
    document.querySelectorAll('.like-button').forEach(button => {
        button.addEventListener('click', async function() {
            const photoId = this.dataset.photoId;
            const isLiked = this.dataset.liked === 'true';
            
            try {
                const response = await fetch(`/like/${photoId}`);
                if (response.ok) {
                    this.dataset.liked = !isLiked;
                    const icon = this.querySelector('.fa-heart');
                    const count = this.querySelector('.like-count');
                    const currentCount = parseInt(count.textContent);
                    
                    if (!isLiked) {
                        icon.parentElement.classList.add('bg-pink-100', 'text-pink-500');
                        icon.classList.add('like-animation');
                        count.textContent = currentCount + 1;
                    } else {
                        icon.parentElement.classList.remove('bg-pink-100', 'text-pink-500');
                        count.textContent = currentCount - 1;
                    }
                    
                    setTimeout(() => icon.classList.remove('like-animation'), 500);
                }
            } catch (error) {
                console.error('Erreur lors du like:', error);
            }
        });
    });
    

    // Gestion des commentaires
    document.querySelectorAll('.comment-toggle').forEach(button => {
        button.addEventListener('click', function() {
            const targetId = this.dataset.target;
            const commentSection = document.getElementById(targetId);
            
            if (commentSection.classList.contains('hidden')) {
                commentSection.classList.remove('hidden');
                setTimeout(() => {
                    commentSection.scrollIntoView({ behavior: 'smooth' });
                    const input = commentSection.querySelector('input, textarea');
                    if (input) input.focus();
                }, 100);
            } else {
                commentSection.classList.add('hidden');
            }
        });
    });


    // Gestion de l'ajout de commentaires
    document.querySelectorAll('.comment-form').forEach(form => {
        form.addEventListener('submit', async function(event) {
            event.preventDefault(); // Empêche le rechargement de la page
            const photoId = this.dataset.photoId;
            const formData = new FormData(this);
            const commentSection = document.getElementById(`comments-${photoId}`);
            const commentList = commentSection.querySelector('.space-y-4');
            const message = formData.get('commentaire[message]');

            try {
                const response = await fetch(this.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (response.ok) {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(await response.text(), 'text/html');
                    const newComment = doc.querySelector('#commentaire');
                    if (newComment) {
                        newComment.querySelector('.commentairemsg').textContent = message;
                        commentList.appendChild(newComment);
                        this.reset();
                    } else {
                        console.error('Erreur: le commentaire n\'a pas été trouvé dans la réponse.');
                    }
                } else {
                    console.error('Erreur lors de l\'ajout du commentaire:', response.statusText);
                }
            } catch (error) {
                console.error('Erreur lors de l\'ajout du commentaire:', error);
            }
        });
    });
});
</script>
{% endblock %}